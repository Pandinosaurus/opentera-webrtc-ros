<launch>
    <arg name="signalling_server_hostname" default="localhost"/>
    <arg name="signaling_server_port" default="8080"/>
    <arg name="signaling_server_password" default="abc"/>
    <arg name="model" default="waffle" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="stand_alone" default="false" />

    <!-- Signaling server -->
    <include if="$(arg stand_alone)" file="$(find opentera_webrtc_demos)/launch/opentera_signaling_server.launch">
        <arg name="signaling_server_port" value="$(arg signaling_server_port)" />
        <arg name="signaling_server_password" value="$(arg signaling_server_password)" />
    </include>


    <!-- OpenTera Client (with default config file) -->
    <include unless="$(arg stand_alone)" file="$(find opentera_client_ros)/launch/client.launch">
    </include>

    <!-- Turtlebot simulator -->
    <include file="$(find opentera_webrtc_demos)/launch/opentera_turtlebot_sim.launch">
        <arg name="model" value="$(arg model)" />
    </include>

    <!-- Map image generator -->
    <include file="$(find map_image_generator)/launch/map_image_generator.launch" >
        <arg name="refresh_rate_param" value="5"/>
        <arg name="input_global_path_topic" value="/move_base/NavfnROS/plan"/>
        <arg name="draw_goal" default="false"/>
    </include>

    <!-- Front camera -->
    <include file="$(find opentera_webrtc_ros)/launch/ros_stream_client.launch">
        <arg name="name" value="topic_streamer1"/>
        <arg name="is_stand_alone" value="$(arg stand_alone)"/>
        <arg name="can_send_audio_stream" value="true"/>
        <arg name="can_receive_audio_stream" value="true"/>
        <arg name="can_send_video_stream" value="true"/>
        <arg name="can_receive_video_stream" value="true"/>
        <arg name="is_screen_cast" value="false"/>
        <arg name="needs_denoising" value="false"/>
        <arg name="server_url" value="http://localhost:$(arg signaling_server_port)"/>
        <arg name="client_name" value="Robot Front Camera"/>
        <arg name="room_name" value="VideoConf"/>
        <arg name="room_password" value="$(arg signaling_server_password)"/>
        <arg name="camera_topic" value="/front_camera/image_raw"/>
    </include>

    <!-- Bottom camera -->
    <include file="$(find opentera_webrtc_ros)/launch/ros_stream_client.launch">
        <arg name="name" value="topic_streamer2"/>
        <arg name="is_stand_alone" value="$(arg stand_alone)"/>
        <arg name="can_send_audio_stream" value="false"/>
        <arg name="can_receive_audio_stream" value="false"/>
        <arg name="can_send_video_stream" value="true"/>
        <arg name="can_receive_video_stream" value="false"/>
        <arg name="is_screen_cast" value="false"/>
        <arg name="needs_denoising" value="false"/>
        <arg name="server_url" value="http://localhost:$(arg signaling_server_port)"/>
        <arg name="client_name" value="Robot Bottom Camera"/>
        <arg name="room_name" value="CameraX"/>
        <arg name="room_password" value="$(arg signaling_server_password)"/>
        <arg name="camera_topic" value="/r200/rgb/image_raw"/>
    </include>

    <!-- Map image stream -->
    <include file="$(find opentera_webrtc_ros)/launch/ros_stream_client.launch">
        <arg name="name" value="topic_streamer3"/>
        <arg name="is_stand_alone" value="$(arg stand_alone)"/>
        <arg name="can_send_audio_stream" value="false"/>
        <arg name="can_receive_audio_stream" value="false"/>
        <arg name="can_send_video_stream" value="true"/>
        <arg name="can_receive_video_stream" value="false"/>
        <arg name="is_screen_cast" value="false"/>
        <arg name="needs_denoising" value="false"/>
        <arg name="server_url" value="http://localhost:$(arg signaling_server_port)"/>
        <arg name="client_name" value="Map image"/>
        <arg name="room_name" value="Map"/>
        <arg name="room_password" value="$(arg signaling_server_password)"/>
        <arg name="camera_topic" value="/map_image_generator/image"/>
    </include>

    <!-- Data Channel  -->
    <include file="$(find opentera_webrtc_ros)/launch/ros_data_channel_client.launch">
        <arg name="name" value="data_streamer"/>
        <arg name="is_stand_alone" value="$(arg stand_alone)"/>
        <arg name="server_url" value="http://localhost:$(arg signaling_server_port)"/>
        <arg name="client_name" value="Robot Data Channel"/>
        <arg name="room_name" value="Teleop"/>
        <arg name="room_password" value="$(arg signaling_server_password)"/>
    </include>

    <!-- Json Message Handler -->
    <include file="$(find opentera_webrtc_ros)/launch/ros_json_data_handler.launch">
        <arg name="name" value="json_data_handler"/>
        <arg name="input_topic" value="/webrtc_data_incoming"/>
        <arg name="linear_multiplier" value="0.5"/>
        <arg name="angular_multiplier" value="0.35"/>
    </include>

    <!-- Robot status simulated data -->
    <node name="robot_status" type="robot_status.py" pkg="opentera_webrtc_demos">
        <remap from="robot_status" to="webrtc_data_outgoing"/>
    </node>

    <!-- Audio Capture -->
    <node name="audio_capture" type="alsa_capture_node" pkg="audio_utils" output="screen" respawn="true">
        <param name="device"   type="string"   value="default"/>
        <param name="format"   type="string"   value="signed_16"/>
        <param name="channel_count"   type="int"   value="1"/>
        <param name="sampling_frequency" type="int" value="48000"/>
        <!-- 100ms, 10ms frames required by WebRTC are handled in ros_stream_client -->
        <param name="frame_sample_count" type="int" value="4800"/>
        <param name="merge" type="bool" value="false" />
        <param name="merge_gain" type="double" value="1.0" />
        <param name="latency_us" type="int" value="40000" />
    </node>

    <!-- Audio playback (mixing)-->
    <node name="audio_playback" type="alsa_playback_node" pkg="audio_utils" output="screen" respawn="true">
        <param name="device"   type="string"   value="default"/>
        <param name="format"   type="string"   value="signed_16"/>
        <param name="channel_count"   type="int"   value="1"/>
        <param name="sampling_frequency" type="int" value="48000"/>
        <!--10ms frames coming from WebRTC-->
        <param name="frame_sample_count" type="int" value="480"/>
        <param name="latency_us" type="int" value="40000" />
        <remap from="audio_in" to="audio_mixed"/>
    </node>

    <!-- audio_writer for debug -->
    <!--
    <node name="audio_writer" type="raw_file_writer_node.py" pkg="audio_utils" output="screen">
        <param name="output_path"   type="string"   value="/home/dominic/Desktop/music.raw"/>
        <remap from="audio_in" to="audio_mixed"/>
    </node>
    -->

    <!-- Robot GUI-->
    <node pkg="opentera_webrtc_robot_gui" type="opentera_webrtc_robot_gui_node" name="robot_gui" output="screen" respawn="true"/>
</launch>

